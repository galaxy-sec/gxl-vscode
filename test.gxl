extern mod head { path = "./_gal/"; }

mod env  {
   env _common  : rust_env.init ,rust_env.release  {
    sudo      = "false";
    root      = ".";
    run       = "./run";
    target_name = "";
    prj_key   = "galaxy_flow" ;
    DIST_REPO = "unknow";

  }
  env _branch_auto {
      gx.read_cmd {
        name = "BRANCH_ENV";
        cmd  = r#"git branch --show-current |  sed -E "s/(feature|develop|ver-dev|release|master|issue)(\/.*)?/_branch_\1/g" "# ;
        log  = "debug";
        }
  }

  env macos {
    DIST_REPO = "macos" ;
  }

  env ubuntu {
    DIST_REPO = "ubuntu" ;
  }

  #[usage(desp="use debug ",color="blue")]
  env debug :  rust_env.debug;


  #[usage(desp="default mamcos", color="green")]
  env default    : _common,macos;
}

mod main   {
      bld_bins = "target/${ENV_BUILD_NAME}" ;
      prj_bins = "${ENV_ROOT}/bin" ;
      usr_bins = "${HOME}/bin" ;

    #[auto_load(entry)]
    flow __into  {
      //bld_bins = "target/${ENV_BUILD_NAME}" ;
      //prj_bins = "${ENV_ROOT}/bin" ;
      //usr_bins = "${HOME}/bin" ;

    }
    flow conf  {
      gx.echo { value="${ENV_PRJ_KEY}"; }
      gx.echo { value="PRJ_BINS: ${MAIN_PRJ_BINS} "; }
      gx.echo { value="USR_BIN : ${MAIN_USR_BINS} "; }
      gx.echo { value="RG_OS_SYS: ${RG_OS_SYS} "; }

      gx.echo { value= "ENV_BUILD_FLAG :  ${ENV_BUILD_FLAG}  " }
      gx.echo { value= "ENV_TARGET_FLAG : ${ENV_TARGET_FLAG} " }
      os.path { dst =  "${ENV_RUN}";  }
    }


  #[usage(desp="use project cargo conf")]
  flow cargo_env {
    gx.cmd  { cmd = "cp -f build/cargo.conf $CARGO_HOME/config"; }
  }
  flow coverage : rust_flow.coverage ;

  #[usage(desp="build system")]
  flow build: ver.use ,conf , rust_flow.build : pub_local {
      os.path { dst = "${MAIN_USR_BINS}"; }
      os.path { dst = "${MAIN_PRJ_BINS}"; }
  }
  #[usage(desp="lint code")]
  flow lint : rust_flow.lint {} ;
  flow test : build : {
    gx.cmd {cmd = "cargo test --all ${ENV_BUILD_FLAG}", log = "1" , out="true" ; }
  }
  flow sys_test : main.build : {
    gx.cmd {cmd = "cargo test --test sys_tests  --all-features  ${ENV_BUILD_FLAG}"; log = "1" ; out="true" ; }
  }

  flow pub_local   {

    os.path { dst = "${MAIN_USR_BINS}"; }
    os.path { dst = "${MAIN_PRJ_BINS}"; }
    gx.cmd  { cmd = "rm -f ${MAIN_PRJ_BINS}/r*" ; }
    gx.cmd { cmd = "cp ${MAIN_BLD_BINS}/g* ${MAIN_PRJ_BINS}/" ; }
    gx.cmd { cmd = "cp ${MAIN_PRJ_BINS}/g* ${MAIN_USR_BINS}/" ; }
  }
  flow _pub_gsys: : _pub_dysec {
    UP_TARGET = "gsys";
  }
  flow _pub_gmod: : _pub_dysec {
    UP_TARGET = "gmod";
  }
  flow _pub_gflow: : _pub_dysec {
    UP_TARGET = "gflow";
  }
  flow _pub_gprj: : _pub_dysec {
    UP_TARGET = "gprj";
  }
  flow pub_dysec  : _pub_gflow,_pub_gprj,_pub_gmod,_pub_gsys ;

  flow _pub_dysec :ver.use {
    gx.assert { value = "${ENV_DIST_REPO}" , expect = "unknow" , result = "false" , error = "not choose macos or ubuntu" }
    gx.echo { value = "pub ${UP_TARGET} to dysec " }
    gx.upload {
        url = "https://dy-sec-generic.pkg.coding.net/galaxy-open/${ENV_DIST_REPO}/${UP_TARGET}?version=${VERSION}",
        username = "${SEC_GFLOW_LOGIN}",
        method = "PUT",
        password = "${SEC_GFLOW_PASSWORD}",
        local_file = "./${MAIN_BLD_BINS}/${UP_TARGET}"
    }
  }

}
